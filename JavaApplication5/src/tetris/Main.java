/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tetris;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.Timer;

/**
 *
 * @author diana
 */
public class Main extends javax.swing.JFrame {
    public Random r = new Random();
    public Field field;
    public int scale = 60;
    public String piecetypes = "OLJITSZ";
    public Color[] colors = {Color.BLACK, Color.RED, Color.ORANGE, Color.YELLOW, Color.PINK, Color.GREEN, Color.BLUE, Color.MAGENTA};
    public int ticks = 0;
    public Tetromino currentpiece = new Tetromino(randomPiece(piecetypes), 4, 0, scale);
    public Tetromino nextpiece = new Tetromino(randomPiece(piecetypes), 4, 0, scale);

    public Timer clock = new Timer(100, new ActionListener() {
        
        public void actionPerformed(ActionEvent e) {
            tick();
            playfield.repaint();
            scorelabel.repaint();
            nextpanel.repaint();
        }
    });
    
    public class MyPanel extends JPanel {
        @Override
        public void paint(Graphics g) {
            super.paint(g);
            field.paintField(g);
            currentpiece.paint(g);
        }
    }
    
    public class MyPanel2 extends JPanel {
        @Override
        public void paint(Graphics g) {
            super.paint(g);
            nextpiece.nextpaint(g);
        }
    }
    
    public void tick() {
        ticks += 1;
        if (ticks % 10 == 0) {
            counter(scorelabel);
        }
        if (ticks % 20 == 0) {
            if (currentpiece.CheckCollision(field)) {
                merge(currentpiece, field);
                currentpiece = nextpiece;
                nextpiece = new Tetromino(randomPiece(piecetypes), 4, 0, scale);
                
            }
            field.checkAL(field.matrix);
        }
    }
    
    public void counter(JLabel l) {
        l.setText("score: " + ticks/10);
    }
    
    public String randomPiece(String s) {
        int ind = r.nextInt(s.length());
        String ns = "" + s.charAt(ind);
        return ns;
    }

    
    public void merge(Tetromino t, Field f) {
        for (int i = 0; i < t.matrix.length; i++) {
            for (int j = 0; j < t.matrix[i].length; j++) {
                if (t.matrix[i][j] > 0) {
                f.matrix.get(i + t.y)[j + t.x] = t.matrix[i][j];
                }
            }
        }
    }
    /**
     * Creates new form Main
     */
    public Main() {
        initComponents();
        field = new Field(10, 20, scale);
        clock.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playfield = new MyPanel();
        tetrislabel = new javax.swing.JLabel();
        newgamebutton = new java.awt.Button();
        scorelabel = new javax.swing.JLabel();
        leftbutton = new javax.swing.JButton();
        rightbutton = new javax.swing.JButton();
        rotatebutton = new javax.swing.JButton();
        dropbutton = new javax.swing.JButton();
        newpiecebutton = new javax.swing.JButton();
        nextpanel = new MyPanel2();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        playfield.setBackground(new java.awt.Color(0, 0, 0));
        playfield.setPreferredSize(new java.awt.Dimension(600, 1200));

        javax.swing.GroupLayout playfieldLayout = new javax.swing.GroupLayout(playfield);
        playfield.setLayout(playfieldLayout);
        playfieldLayout.setHorizontalGroup(
            playfieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        playfieldLayout.setVerticalGroup(
            playfieldLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1200, Short.MAX_VALUE)
        );

        tetrislabel.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        tetrislabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tetrislabel.setText("TETRIS");

        newgamebutton.setFont(new java.awt.Font("Dialog", 0, 36)); // NOI18N
        newgamebutton.setLabel("New Game");
        newgamebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newgamebuttonActionPerformed(evt);
            }
        });

        leftbutton.setText("left");
        leftbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftbuttonActionPerformed(evt);
            }
        });

        rightbutton.setText("right");
        rightbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightbuttonActionPerformed(evt);
            }
        });

        rotatebutton.setText("rotate");
        rotatebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rotatebuttonActionPerformed(evt);
            }
        });

        dropbutton.setText("drop");
        dropbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropbuttonActionPerformed(evt);
            }
        });

        newpiecebutton.setText("new piece");
        newpiecebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newpiecebuttonActionPerformed(evt);
            }
        });

        nextpanel.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout nextpanelLayout = new javax.swing.GroupLayout(nextpanel);
        nextpanel.setLayout(nextpanelLayout);
        nextpanelLayout.setHorizontalGroup(
            nextpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );
        nextpanelLayout.setVerticalGroup(
            nextpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 240, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(playfield, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tetrislabel, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(91, 91, 91)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(leftbutton)
                                        .addGap(108, 108, 108)
                                        .addComponent(rightbutton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(67, 67, 67)
                                        .addComponent(rotatebutton))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(70, 70, 70)
                                        .addComponent(dropbutton))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(nextpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(newgamebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(scorelabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 260, Short.MAX_VALUE)
                        .addComponent(newpiecebutton)
                        .addGap(94, 94, 94))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tetrislabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newgamebutton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(scorelabel)
                    .addComponent(newpiecebutton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(playfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(nextpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(rotatebutton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(leftbutton)
                            .addComponent(rightbutton))
                        .addGap(18, 18, 18)
                        .addComponent(dropbutton)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void newgamebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newgamebuttonActionPerformed
        // TODO add your handling code here:
        field = new Field(10, 20, scale);
    }//GEN-LAST:event_newgamebuttonActionPerformed

    private void rotatebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rotatebuttonActionPerformed
        // TODO add your handling code here:
        currentpiece.Rotate(currentpiece);
    }//GEN-LAST:event_rotatebuttonActionPerformed

    private void rightbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightbuttonActionPerformed
        // TODO add your handling code here:
        currentpiece.MoveRight(field);
    }//GEN-LAST:event_rightbuttonActionPerformed

    private void leftbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftbuttonActionPerformed
        // TODO add your handling code here:
        currentpiece.MoveLeft(field);
    }//GEN-LAST:event_leftbuttonActionPerformed

    private void dropbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropbuttonActionPerformed
        // TODO add your handling code here:
        currentpiece.fall(field);
    }//GEN-LAST:event_dropbuttonActionPerformed

    private void newpiecebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newpiecebuttonActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_newpiecebuttonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dropbutton;
    private javax.swing.JButton leftbutton;
    private java.awt.Button newgamebutton;
    private javax.swing.JButton newpiecebutton;
    private javax.swing.JPanel nextpanel;
    private javax.swing.JPanel playfield;
    private javax.swing.JButton rightbutton;
    private javax.swing.JButton rotatebutton;
    private javax.swing.JLabel scorelabel;
    private javax.swing.JLabel tetrislabel;
    // End of variables declaration//GEN-END:variables
}
